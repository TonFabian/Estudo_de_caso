image: docker:latest  # A imagem base para o job

stages:
  - build
  - test
  - lint
  - security
  - dast
  - deploy
  - monitor

variables:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: my-app
  GRAFANA_URL: http://localhost:3100
  GRAFANA_USER: admin
  GRAFANA_PASSWORD: admin
  LOKI_URL: http://localhost:3100
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375  # Definir como o Docker se comunica
  DOCKER_TLS_CERTDIR: ""  # Desativar o uso de certificados TLS para a comunicação

services:
  - docker:dind  # Ativar Docker-in-Docker como serviço

before_script:
  - docker info  # Verificar se o Docker está configurado corretamente

build:
  stage: build
  script:
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$CI_PIPELINE_ID .

test:
  stage: test
  image: $DOCKER_REGISTRY/$IMAGE_NAME:$CI_PIPELINE_ID  # Usar a imagem construída
  script:
    - pip install -r requirements.txt  # Instalar dependências
    - pytest  # Executar testes

lint:
  stage: lint
  image: python:3.9-slim  # Usar imagem leve do Python para lint
  script:
    - pip install flake8 isort  # Instalar ferramentas de lint
    - flake8 .  # Executar flake8
    - isort . --check-only  # Verificar importações

security:
  stage: security
  image: python:3.9-slim  # Usar imagem leve do Python para análise de segurança
  script:
    - pip install bandit  # Instalar Bandit
    - bandit -r . -f json -o bandit_report.json  # Executar Bandit
    - dependency-check.sh --project "my-project" --scan . --format ALL

dast:
  stage: dast
  script:
    - docker run -d --name my-app -p 5000:5000 $DOCKER_REGISTRY/$IMAGE_NAME:$CI_PIPELINE_ID
    - docker run -d --name zap -p 8080:8080 owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8080
    - echo "Aguardando o ZAP inicializar..."
    - sleep 60  # Aguardar a inicialização completa do ZAP
    - docker exec zap zap-cli quick-scan -t http://localhost:5000 -r zap_report.html || true  # Executar o scan de segurança
  artifacts:
    paths:
      - zap_report.html  # Salvar o relatório como artefato
    expire_in: 1 week

deploy:
  stage: dep

