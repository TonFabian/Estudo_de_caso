stages:
  - build
  - test
  - security
  - dast
  - monitor

build:
  stage: build
  script:
    - echo "Construindo o projeto..."
    - docker build -t my-app .

test:
  stage: test
  script:
    - echo "Executando testes..."
    - docker run --rm my-app pytest

bandit:
  stage: security
  image: pyupio/bandit
  script:
    - bandit -r todo_project -f json -o bandit_report.json
  artifacts:
    paths:
      - bandit_report.json
    expire_in: 1 week

dependency-check:
  stage: security
  image: owasp/dependency-check
  script:
    - dependency-check.sh --project "TaskManager" --outdir ./dependency-check-report --scan . --format "ALL"
  artifacts:
    paths:
      - dependency-check-report/
    expire_in: 1 week

dast:
  stage: dast
  image: zaproxy/zap-stable:2.15.0
  services:
    - docker:dind
  script:
    - docker run -d --name my-app -p 5000:5000 my-app
    - docker run -d --name zap -p 8080:8080 zaproxy/zap-stable:2.15.0 zap.sh -daemon -host 0.0.0.0 -port 8080
    - sleep 30
    - docker exec zap zap-cli quick-scan -t http://localhost:5000 -r zap_report.html
  artifacts:
    paths:
      - zap_report.html
    expire_in: 1 week

monitor:
  stage: monitor
  script:
    - echo "Configurando monitoramento com Grafana e Loki"
    # Adicione o script de instalação do Loki e Grafana aqui

