name: Continuous Integration

on: pull_request

jobs:
  continuous-integration:
    runs-on: ubuntu-latest  # Alterado para um ambiente adequado

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build
        run: echo "Build stage: Executando processos de build..."

      - name: Test
        run: pytest todo/tests

      - name: Lint
        run: |
          echo "Executando linting..."
          flake8 todo_project/
        continue-on-error: true # Permite que o job falhe sem interromper o pipeline

      - name: Security Check
        run: |
          pip install bandit
          bandit -r . -f json -o bandit_report.json || true
        continue-on-error: true
        env:
          BANDIT_CONFIG: bandit_config.yaml # Se precisar de uma configuração específica

      - name: DAST
        run: |
          docker run -d --name my-app -p 5000:5000 python:3.9-slim-buster # Iniciar aplicação Flask
          echo "Aguardando o ZAP inicializar..."
          sleep 60 # Aguardar a inicialização completa do ZAP
          docker run -d --name zap -p 8083:8080 zaproxy/zap-stable:2.15.0 zap.sh -daemon -host 0.0.0.0 -port 8080
          docker exec zap zap-cli quick-scan -t http://localhost:5000 -r zap_report.html || true
        continue-on-error: true

      - name: Upload DAST Report
        uses: actions/upload-artifact@v2
        with:
          name: zap_report
          path: zap_report.html

      - name: Monitor
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
            "name": "Loki",
            "type": "loki",
            "url": "'"$LOKI_URL"'",
            "access": "proxy"
          }' "http://$GRAFANA_USER:$GRAFANA_PASSWORD@$GRAFANA_URL/api/datasources" || echo "Falha ao configurar Loki no Grafana"
